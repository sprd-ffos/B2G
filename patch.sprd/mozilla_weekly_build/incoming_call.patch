diff --git a/dom/system/gonk/RadioInterfaceLayer.js b/dom/system/gonk/RadioInterfaceLayer.js
index 813942f..5731d16 100644
--- a/dom/system/gonk/RadioInterfaceLayer.js
+++ b/dom/system/gonk/RadioInterfaceLayer.js
@@ -1286,13 +1286,26 @@ RadioInterfaceLayer.prototype = {
    * system.
    */
   handleCallStateChange: function handleCallStateChange(call) {
+     var isincomingcall = false;
     debug("handleCallStateChange: " + JSON.stringify(call));
     call.state = convertRILCallState(call.state);
 
-    if (call.state == nsIRadioInterfaceLayer.CALL_STATE_DIALING) {
-      gSystemMessenger.broadcastMessage("telephony-new-call", {});
+    if (call.state == nsIRadioInterfaceLayer.CALL_STATE_INCOMING ||
+        call.state == nsIRadioInterfaceLayer.CALL_STATE_DIALING) {
+      gSystemMessenger.broadcastMessage("telephony-new-call", {number: call.number,
+                                                               state: call.state});
+    }
+    if(call.state == nsIRadioInterfaceLayer.CALL_STATE_INCOMING) //only  separate update audio state for incoming
+    {
+         isincomingcall = true;
+	gAudioManager.phoneState = nsIAudioManager.PHONE_STATE_RINGTONE;
+	debug("Incoming call, handleCallStateChange put audio system into PHONE_STATE_RINGTONE: "
+		+ gAudioManager.phoneState);
+    }
+    if(!isincomingcall)//except incomingcall
+    {
+    	this.updateCallAudioState(call);
     }
-    this.updateCallAudioState(call);
     this._sendTargetMessage("telephony", "RIL:CallStateChanged", call);
   },
 
